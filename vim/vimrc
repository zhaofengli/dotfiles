" == Pathogen ==
" Oh no! That's a virus!
runtime bundle/vim-pathogen/autoload/pathogen.vim
execute pathogen#infect()

" == Simple stuff ==
" Use bash as shell for portability
set shell=/bin/bash

" Highlight syntax
syntax on

" Tab width
set ts=4 sw=4

" Color schemes
colorscheme molokai

" Common sets
set autowrite hlsearch
set modeline

" Ruler
set colorcolumn=80

" == Extra key mappings / commands ==
" F10 to run
autocmd FileType python nnoremap <silent> <F10> :w<cr>:!clear;python3 %<cr>
autocmd FileType php nnoremap <silent> <F10> :w<cr>:!clear;php %<cr>
autocmd FileType java nnoremap <silent> <F10> :w<cr>:!clear;javac % && java %:r<cr>
autocmd FileType javascript nnoremap <silent> <F10> :w<cr>:!clear;babel-node %<cr>
autocmd FileType c nnoremap <silent> <F10> :w<cr>:!clear;cc -g -Wall -Wextra -Werror -pedantic -std=c11 % && ./a.out<cr>
autocmd FileType cpp nnoremap <silent> <F10> :w<cr>:!clear;c++ -g -Wall -Wextra -Werror -pedantic -std=c++14 % && ./a.out<cr>
autocmd FileType nim nnoremap <silent> <F10> :w<cr>:!clear;nim c -r %<cr>

" Fat fingers :P
command WQ wq
command Wq wq
command W w
command Q q

" :C to clear search highlight
" http://stackoverflow.com/a/657484
command C let @/ = ""

" Press Space to insert a single character
" http://vim.wikia.com/wiki/Insert_a_single_character
nnoremap <Space> i_<Esc>r

" == vim-localvimrc ==
let g:localvimrc_persistent = 1
let g:localvimrc_event = ['BufReadPre']

" == Enhanced C++ Highlight ==
let g:cpp_class_scope_highlight = 1
let g:cpp_member_variable_highlight = 1
let g:cpp_experimental_template_highlight = 1

" == Skeletons ==
function SkeletonCpp()
	0r ~/.vim/templates/skeleton.cpp
	6
	autocmd! templates
	autocmd User LocalVimRCPost execute 'norm gg=G' | 6
endfunction

function SkeletonOjCpp()
	0r ~/.vim/templates/skeleton.oj.cpp
	17
	autocmd! templates
	autocmd User LocalVimRCPost execute 'norm gg=G' | 17
endfunction

augroup templates
	autocmd BufNewFile *.oj.cpp call SkeletonOjCpp()
	autocmd BufNewFile *.cpp call SkeletonCpp()
augroup END

" == Folding behavior ==
" Enable folding based on syntax
set foldmethod=syntax

" Unfold everything by default
" http://stackoverflow.com/a/8316817
au BufWinEnter * normal zR

" Fold correctly in fish
autocmd FileType fish setlocal foldmethod=expr

" == Auto indentation ==
" Indent based on filetype
filetype plugin indent on
set smartindent

" Fix yaml indentation
" http://stackoverflow.com/questions/26962999/wrong-indentation-when-editing-yaml-in-vim
autocmd FileType yaml setl et ts=2 sts=2 sw=2
autocmd FileType yaml setl indentkeys-=<:>

" Markdown indentation
autocmd FileType markdown setl et ts=4 sts=4 sw=4

" Web indentation
autocmd FileType html,javascript,vue,blade setl et ts=2 sts=2 sw=2

" == Line wrapping ==
" Enable line wrapping
set linebreak breakindent

" == Writing ==
" Enable spellcheck for Markdown
autocmd FileType markdown set spell spelllang=en_us

" Enable fountain.vim
au BufRead,BufNewFile *.fountain set filetype=fountain

" == Syntastic ==
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0

" Convince Syntastic to use Python 3
let g:syntastic_python_python_exec = '/usr/bin/python3'
let g:syntastic_python_flake8_args='--ignore=E501'

" ESLint
let g:syntastic_javascript_checkers=['eslint']
let g:syntastic_javascript_eslint_exe='$(npm bin)/eslint'

" == Airline ==
" Make the status line boring
let g:airline_powerline_fonts = 0
let g:airline_left_sep = ''
let g:airline_right_sep = ''
let g:airline_mode_map = {
    \ '__' : '-',
    \ 'n'  : 'N',
    \ 'i'  : 'I',
    \ 'R'  : 'R',
    \ 'c'  : 'C',
    \ 'v'  : 'V',
    \ 'V'  : 'V',
    \ ''   : 'V',
    \ 's'  : 'S',
    \ }

" == Vimtex ==
let g:vimtex_latexmk_continuous = 1

" == Tom ==
" Jerry will be caught
command T set mouse=
